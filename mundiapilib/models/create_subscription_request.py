# -*- coding: utf-8 -*-

"""
    mundiapilib.models.create_subscription_request

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""
from mundiapilib.api_helper import APIHelper
import mundiapilib.models.create_customer_request
import mundiapilib.models.create_credit_card_request
import mundiapilib.models.create_pricing_scheme_request
import mundiapilib.models.create_subscription_item_request
import mundiapilib.models.create_shipping_request
import mundiapilib.models.create_discount_request
import mundiapilib.models.create_setup_request

class CreateSubscriptionRequest():

    """Implementation of the 'CreateSubscriptionRequest' model.

    Request for creating a subcription

    Attributes:
        plan_id (string): TODO: type description here.
        customer (CreateCustomerRequest): TODO: type description here.
        credit_card (CreateCreditCardRequest): TODO: type description here.
        code (string): TODO: type description here.
        customer_id (string): TODO: type description here.
        credit_card_id (string): TODO: type description here.
        credit_card_gateway_id (string): TODO: type description here.
        payment_method (string): TODO: type description here.
        billing_type (string): TODO: type description here.
        statement_descriptor (string): TODO: type description here.
        description (string): TODO: type description here.
        currency (string): TODO: type description here.
        interval (string): TODO: type description here.
        interval_count (int): TODO: type description here.
        pricing_scheme (CreatePricingSchemeRequest): TODO: type description
            here.
        items (list of CreateSubscriptionItemRequest): TODO: type description
            here.
        shipping (CreateShippingRequest): TODO: type description here.
        discounts (list of CreateDiscountRequest): TODO: type description
            here.
        metadata (dict<object, string>): TODO: type description here.
        setup (CreateSetupRequest): TODO: type description here.
        billing_day (int): TODO: type description here.
        installments (int): TODO: type description here.
        start_at (datetime): TODO: type description here.
        minimum_price (int): TODO: type description here.
        cycles (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "plan_id" : "plan_id",
        "customer" : "customer",
        "credit_card" : "credit_card",
        "code" : "code",
        "customer_id" : "customer_id",
        "credit_card_id" : "credit_card_id",
        "credit_card_gateway_id" : "credit_card_gateway_id",
        "payment_method" : "payment_method",
        "billing_type" : "billing_type",
        "statement_descriptor" : "statement_descriptor",
        "description" : "description",
        "currency" : "currency",
        "interval" : "interval",
        "interval_count" : "interval_count",
        "pricing_scheme" : "pricing_scheme",
        "items" : "items",
        "shipping" : "shipping",
        "discounts" : "discounts",
        "metadata" : "metadata",
        "setup" : "setup",
        "billing_day" : "billing_day",
        "installments" : "installments",
        "start_at" : "start_at",
        "minimum_price" : "minimum_price",
        "cycles" : "cycles"
    }

    def __init__(self,
                 plan_id=None,
                 customer=None,
                 credit_card=None,
                 code=None,
                 customer_id=None,
                 credit_card_id=None,
                 credit_card_gateway_id=None,
                 payment_method=None,
                 billing_type=None,
                 statement_descriptor=None,
                 description=None,
                 currency=None,
                 interval=None,
                 interval_count=None,
                 pricing_scheme=None,
                 items=None,
                 shipping=None,
                 discounts=None,
                 metadata=None,
                 setup=None,
                 billing_day=None,
                 installments=None,
                 start_at=None,
                 minimum_price=None,
                 cycles=None):
        """Constructor for the CreateSubscriptionRequest class"""

        # Initialize members of the class
        self.plan_id = plan_id
        self.customer = customer
        self.credit_card = credit_card
        self.code = code
        self.customer_id = customer_id
        self.credit_card_id = credit_card_id
        self.credit_card_gateway_id = credit_card_gateway_id
        self.payment_method = payment_method
        self.billing_type = billing_type
        self.statement_descriptor = statement_descriptor
        self.description = description
        self.currency = currency
        self.interval = interval
        self.interval_count = interval_count
        self.pricing_scheme = pricing_scheme
        self.items = items
        self.shipping = shipping
        self.discounts = discounts
        self.metadata = metadata
        self.setup = setup
        self.billing_day = billing_day
        self.installments = installments
        self.start_at = APIHelper.RFC3339DateTime(start_at) if start_at else None
        self.minimum_price = minimum_price
        self.cycles = cycles


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        plan_id = dictionary.get("plan_id")
        customer = mundiapilib.models.create_customer_request.CreateCustomerRequest.from_dictionary(dictionary.get("customer")) if dictionary.get("customer") else None
        credit_card = mundiapilib.models.create_credit_card_request.CreateCreditCardRequest.from_dictionary(dictionary.get("credit_card")) if dictionary.get("credit_card") else None
        code = dictionary.get("code")
        customer_id = dictionary.get("customer_id")
        credit_card_id = dictionary.get("credit_card_id")
        credit_card_gateway_id = dictionary.get("credit_card_gateway_id")
        payment_method = dictionary.get("payment_method")
        billing_type = dictionary.get("billing_type")
        statement_descriptor = dictionary.get("statement_descriptor")
        description = dictionary.get("description")
        currency = dictionary.get("currency")
        interval = dictionary.get("interval")
        interval_count = dictionary.get("interval_count")
        pricing_scheme = mundiapilib.models.create_pricing_scheme_request.CreatePricingSchemeRequest.from_dictionary(dictionary.get("pricing_scheme")) if dictionary.get("pricing_scheme") else None
        items = None
        if dictionary.get("items") != None:
            items = list()
            for structure in dictionary.get("items"):
                items.append(mundiapilib.models.create_subscription_item_request.CreateSubscriptionItemRequest.from_dictionary(structure))
        shipping = mundiapilib.models.create_shipping_request.CreateShippingRequest.from_dictionary(dictionary.get("shipping")) if dictionary.get("shipping") else None
        discounts = None
        if dictionary.get("discounts") != None:
            discounts = list()
            for structure in dictionary.get("discounts"):
                discounts.append(mundiapilib.models.create_discount_request.CreateDiscountRequest.from_dictionary(structure))
        metadata = dictionary.get("metadata")
        setup = mundiapilib.models.create_setup_request.CreateSetupRequest.from_dictionary(dictionary.get("setup")) if dictionary.get("setup") else None
        billing_day = dictionary.get("billing_day")
        installments = dictionary.get("installments")
        start_at = APIHelper.RFC3339DateTime.from_value(dictionary.get("start_at")).datetime if dictionary.get("start_at") else None
        minimum_price = dictionary.get("minimum_price")
        cycles = dictionary.get("cycles")
        # Return an object of this model
        return cls(plan_id,
                   customer,
                   credit_card,
                   code,
                   customer_id,
                   credit_card_id,
                   credit_card_gateway_id,
                   payment_method,
                   billing_type,
                   statement_descriptor,
                   description,
                   currency,
                   interval,
                   interval_count,
                   pricing_scheme,
                   items,
                   shipping,
                   discounts,
                   metadata,
                   setup,
                   billing_day,
                   installments,
                   start_at,
                   minimum_price,
                   cycles)


